/* 
 * Openbots Documents Connector API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = OpenBots.Server.SDK.Client.SwaggerDateConverter;

namespace OpenBots.Server.SDK.Model
{
    /// <summary>
    /// Response of Submitting a Document to TextXtractor
    /// </summary>
    [DataContract]
        public partial class SubmitDocumentResponse :  IEquatable<SubmitDocumentResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SubmitDocumentResponse" /> class.
        /// </summary>
        /// <param name="humanTaskID">ID of the HumanTask that was created as a result of this Request..</param>
        /// <param name="sessionID">Internal Session ID of the IDP Engine.</param>
        /// <param name="message">Any debug messages if any..</param>
        public SubmitDocumentResponse(Guid? humanTaskID = default(Guid?), Guid? sessionID = default(Guid?), string message = default(string))
        {
            this.HumanTaskID = humanTaskID;
            this.SessionID = sessionID;
            this.Message = message;
        }
        
        /// <summary>
        /// ID of the HumanTask that was created as a result of this Request.
        /// </summary>
        /// <value>ID of the HumanTask that was created as a result of this Request.</value>
        [DataMember(Name="humanTaskID", EmitDefaultValue=false)]
        public Guid? HumanTaskID { get; set; }

        /// <summary>
        /// Internal Session ID of the IDP Engine
        /// </summary>
        /// <value>Internal Session ID of the IDP Engine</value>
        [DataMember(Name="sessionID", EmitDefaultValue=false)]
        public Guid? SessionID { get; set; }

        /// <summary>
        /// Any debug messages if any.
        /// </summary>
        /// <value>Any debug messages if any.</value>
        [DataMember(Name="message", EmitDefaultValue=false)]
        public string Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SubmitDocumentResponse {\n");
            sb.Append("  HumanTaskID: ").Append(HumanTaskID).Append("\n");
            sb.Append("  SessionID: ").Append(SessionID).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SubmitDocumentResponse);
        }

        /// <summary>
        /// Returns true if SubmitDocumentResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of SubmitDocumentResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SubmitDocumentResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.HumanTaskID == input.HumanTaskID ||
                    (this.HumanTaskID != null &&
                    this.HumanTaskID.Equals(input.HumanTaskID))
                ) && 
                (
                    this.SessionID == input.SessionID ||
                    (this.SessionID != null &&
                    this.SessionID.Equals(input.SessionID))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.HumanTaskID != null)
                    hashCode = hashCode * 59 + this.HumanTaskID.GetHashCode();
                if (this.SessionID != null)
                    hashCode = hashCode * 59 + this.SessionID.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
